name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/agilebuddy-frontend:latest
        
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/agilebuddy-backend:latest
        
    # SSH 키 설정
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to EC2
      run: |
        # 기존 폴더 제거 및 새 프로젝트 폴더 생성
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          if [ -d ~/agilebuddy ]; then
            sudo rm -rf ~/agilebuddy
          fi
          mkdir -p ~/agilebuddy
        '
        
        # docker-compose.yml 파일 전송
        scp docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/agilebuddy/
        
        # 도커 컨테이너 실행
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
          cd ~/agilebuddy
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose pull
          docker-compose up -d
        '